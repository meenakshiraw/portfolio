name: Deploy Portfolio

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

# Permissions needed for external repository deployment
permissions:
  contents: read
  pages: write
  id-token: write

env:
  HUGO_VERSION: "0.148.2"
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

# Prevent multiple deployments running simultaneously
concurrency:
  group: "portfolio-deployment"
  cancel-in-progress: true

jobs:
  lint-and-check:
    name: Lint and Pre-checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Markdown Linter
        run: |
          npm install -g markdownlint-cli
          npm install -g markdown-link-check

      - name: Lint Markdown Files
        run: |
          markdownlint content/**/*.md --config .markdownlint.json || true

      - name: Check Markdown Links
        run: |
          find content -name "*.md" -exec markdown-link-check {} \; || true

      - name: Validate Hugo Configuration
        run: hugo config

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: lint-and-check
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Send Slack Start Notification
        if: ${{ env.SLACK_WEBHOOK_URL != '' }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "attachments": [{
              "color": "warning",
              "title": "Portfolio Deployment Started",
              "text": "üöÄ Starting automated deployment via GitHub Actions...",
              "fields": [
                {"title": "Repository", "value": "${{ github.repository }}", "short": true},
                {"title": "Branch", "value": "${{ github.ref_name }}", "short": true},
                {"title": "Commit", "value": "${{ github.sha }}", "short": true},
                {"title": "Triggered by", "value": "${{ github.actor }}", "short": true}
              ],
              "footer": "GitHub Actions"
            }]
          }' ${{ env.SLACK_WEBHOOK_URL }}

      - name: Build Hugo Site
        id: build
        run: |
          hugo --minify --cleanDestinationDir
          # Ensure CNAME file exists
          echo "portfolio.iemafzalhassan.in" > public/CNAME

      - name: Deploy to GitHub Pages
        id: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.DEPLOY_TOKEN }}
          publish_dir: ./public
          publish_branch: main
          external_repository: iemafzalhassan/portfolio-pages
          cname: portfolio.iemafzalhassan.in

  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: deploy
    if: always() && github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Send Slack Success Notification
        if: needs.deploy.result == 'success' && env.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "attachments": [{
              "color": "good",
              "title": "Portfolio Deployment Successful",
              "text": "‚úÖ Portfolio deployed successfully! Site is live at https://portfolio.iemafzalhassan.in/",
              "fields": [
                {"title": "Repository", "value": "${{ github.repository }}", "short": true},
                {"title": "Branch", "value": "${{ github.ref_name }}", "short": true},
                {"title": "Status", "value": "Success", "short": true},
                {"title": "Site URL", "value": "https://portfolio.iemafzalhassan.in/", "short": true}
              ],
              "footer": "GitHub Actions"
            }]
          }' ${{ env.SLACK_WEBHOOK_URL }}

      - name: Send Slack Failure Notification
        if: needs.deploy.result == 'failure' && env.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "attachments": [{
              "color": "danger",
              "title": "Portfolio Deployment Failed",
              "text": "‚ùå Deployment failed. Check GitHub Actions logs for details.",
              "fields": [
                {"title": "Repository", "value": "${{ github.repository }}", "short": true},
                {"title": "Branch", "value": "${{ github.ref_name }}", "short": true},
                {"title": "Status", "value": "Failed", "short": true},
                {"title": "Logs", "value": "https://github.com/${{ github.repository }}/actions", "short": true}
              ],
              "footer": "GitHub Actions"
            }]
          }' ${{ env.SLACK_WEBHOOK_URL }}
